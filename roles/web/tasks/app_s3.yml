- name: Ensure app dir exists
  ansible.builtin.file:
    path: /opt/edunotes
    state: directory
    owner: edunotes
    group: edunotes
    mode: "0755"

- name: Deploy package.json (S3-ready)
  ansible.builtin.template:
    src: "package.json.j2"
    dest: "/opt/edunotes/package.json"
    owner: edunotes
    group: edunotes
    mode: "0644"

- name: Deploy server.js (base app with /metrics, /readyz, S3 upload)
  ansible.builtin.template:
    src: "server.js.j2"
    dest: "/opt/edunotes/server.js"
    owner: edunotes
    group: edunotes
    mode: "0644"

- name: Deploy storage.js (S3 backend)
  ansible.builtin.template:
    src: "storage.js.j2"
    dest: "/opt/edunotes/storage.js"
    owner: edunotes
    group: edunotes
    mode: "0644"

# env は上位タスクで /etc/edunotes/env を作っているのでここでは作らない

# --- ここがポイント: ロックファイル/既存 node_modules を掃除してから通常インストール ---
- name: Remove stale lockfile
  ansible.builtin.file:
    path: /opt/edunotes/package-lock.json
    state: absent

- name: Remove existing node_modules (clean install)
  ansible.builtin.file:
    path: /opt/edunotes/node_modules
    state: absent

- name: Install Node dependencies (prod only, no lock)
  ansible.builtin.shell: |
    set -euo pipefail
    npm install --omit=dev
  args:
    chdir: /opt/edunotes
    executable: /bin/bash
  become: true
  become_user: edunotes
  environment:
    HOME: /home/edunotes
    npm_config_cache: /home/edunotes/.npm

# ここでの再起動は行わない（unit 配置→daemon-reload→Start を上位で実施）

# （お好みで）起動前にポートがLISTENするまで待つ処理は不要なので省略
# ヘルスチェックは上位タスクの /healthz で実施
