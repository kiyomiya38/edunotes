# roles/web/tasks/app_s3.yml
- name: Ensure app dir exists
  ansible.builtin.file:
    path: /opt/edunotes
    state: directory
    owner: edunotes
    group: edunotes
    mode: "0755"

- name: Deploy package.json (S3-ready)
  ansible.builtin.template:
    src: "package.json.j2"
    dest: "/opt/edunotes/package.json"
    owner: edunotes
    group: edunotes
    mode: "0644"

- name: Deploy server.js (backend + metrics + static)
  ansible.builtin.template:
    src: "server.js.j2"
    dest: "/opt/edunotes/server.js"
    owner: edunotes
    group: edunotes
    mode: "0644"

- name: Deploy storage.js (S3 backend helper)
  ansible.builtin.template:
    src: "storage.js.j2"
    dest: "/opt/edunotes/storage.js"
    owner: edunotes
    group: edunotes
    mode: "0644"

# ★ ここからフロント
- name: Ensure public dir
  ansible.builtin.file:
    path: /opt/edunotes/public
    state: directory
    owner: edunotes
    group: edunotes
    mode: "0755"

- name: Deploy index.html
  ansible.builtin.template:
    src: "index.html.j2"
    dest: "/opt/edunotes/public/index.html"
    owner: edunotes
    group: edunotes
    mode: "0644"

# クリーンインストール
- name: Remove stale lockfile
  ansible.builtin.file:
    path: "/opt/edunotes/package-lock.json"
    state: absent

- name: Remove existing node_modules (clean install)
  ansible.builtin.file:
    path: "/opt/edunotes/node_modules"
    state: absent

- name: Install Node dependencies (prod only, no lock)
  ansible.builtin.command: npm install --omit=dev
  args: { chdir: "/opt/edunotes" }
  environment:
    NODE_ENV: "production"
    HOME: "/home/edunotes"
    npm_config_cache: "/home/edunotes/.npm"
  become: true
  become_user: edunotes

# ── ここから追加（REDIS_URL 自動生成）──────────────────────────
- name: Read Redis host via AWS CLI (from SSM)
  ansible.builtin.command: >
    aws ssm get-parameter
    --name "/edunotes/redis/host"
    --region {{ aws_region }}
    --query 'Parameter.Value'
    --output text
  register: redis_host_cmd
  changed_when: false
  failed_when: redis_host_cmd.rc != 0   # 必須：ホストは必ず取れる前提

- name: Read Redis password via AWS CLI (optional)
  ansible.builtin.command: >
    aws ssm get-parameter
    --name "/edunotes/redis/password"
    --with-decryption
    --region {{ aws_region }}
    --query 'Parameter.Value'
    --output text
  register: redis_pass_cmd
  changed_when: false
  failed_when: false                    # パスワード未設定でもOK

- name: Set Redis facts and compose redis_url
  ansible.builtin.set_fact:
    redis_host: "{{ redis_host_cmd.stdout | trim }}"
    redis_pass: "{{ (redis_pass_cmd.stdout | default('')) | trim }}"
    redis_url: >-
      {{ 'redis://:' ~ (redis_pass|urlencode) ~ '@' ~ (redis_host) ~ ':6379/0'
         if (redis_pass|length > 0)
         else 'redis://' ~ (redis_host) ~ ':6379/0' }}
# ── 追加ここまで ───────────────────────────────────────────────

- name: Render /etc/edunotes/env
  ansible.builtin.template:
    src: "app.env.j2"
    dest: "/etc/edunotes/env"
    owner: root
    group: root
    mode: "0644"

- name: Restart edunotes service
  ansible.builtin.systemd:
    name: edunotes
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Ensure app subdirs for views and routes
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: edunotes
    group: edunotes
    mode: "0755"
  loop:
    - /opt/edunotes/views
    - /opt/edunotes/views/notes
    - /opt/edunotes/routes

- name: Deploy EJS views
  ansible.builtin.template:
    src: "views/{{ item.src }}"
    dest: "/opt/edunotes/views/{{ item.dest }}"
    owner: edunotes
    group: edunotes
    mode: "0644"
  loop:
    - { src: "layout.ejs.j2",         dest: "layout.ejs" }
    - { src: "login.ejs.j2",          dest: "login.ejs" }
    - { src: "signup.ejs.j2",         dest: "signup.ejs" }
    - { src: "notes/index.ejs.j2",    dest: "notes/index.ejs" }
    - { src: "notes/new.ejs.j2",      dest: "notes/new.ejs" }
    - { src: "notes/show.ejs.j2",     dest: "notes/show.ejs" }
    - { src: "notes/edit.ejs.j2",     dest: "notes/edit.ejs" }

- name: Deploy routes
  ansible.builtin.template:
    src: "routes/{{ item }}.j2"
    dest: "/opt/edunotes/routes/{{ item }}"
    owner: edunotes
    group: edunotes
    mode: "0644"
  loop:
    - auth.js
    - notes.js

- name: Deploy DB schema
  ansible.builtin.template:
    src: "schema.sql.j2"
    dest: "/opt/edunotes/schema.sql"
    owner: edunotes
    group: edunotes
    mode: "0644"

- name: Compose db_url fact from parts
  ansible.builtin.set_fact:
    db_url: >-
      postgres://{{ db_user }}:{{ db_password }}@{{ db_host }}:5432/{{ db_name }}
  when:
    - db_host is defined
    - db_user is defined
    - db_password is defined
    - db_name is defined

- name: Apply DB schema (idempotent)
  ansible.builtin.shell: |
    set -e
    psql "{{ db_url }}" -f /opt/edunotes/schema.sql
  args:
    executable: /bin/bash
  when: db_url is defined
  changed_when: false
